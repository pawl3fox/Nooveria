services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: orthodoxgpt
      POSTGRES_USER: orthodoxgpt_prod
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orthodoxgpt_prod -d orthodoxgpt"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-dev-secret-key}
      DEVICE_FINGERPRINT_SECRET: ${DEVICE_FINGERPRINT_SECRET}
      DEVELOPER_MASTER_KEY: ${DEVELOPER_MASTER_KEY}
      SOFTWARE_LICENSE_KEY: ${SOFTWARE_LICENSE_KEY}
      LICENSE_VALIDATION_SECRET: ${LICENSE_VALIDATION_SECRET}
      DEVELOPER_EMAIL: ${DEVELOPER_EMAIL}
      CORS_ORIGINS: ${CORS_ORIGINS}
      SYSTEM_VERSION: ${SYSTEM_VERSION}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=${VITE_API_URL}

volumes:
  postgres_data: